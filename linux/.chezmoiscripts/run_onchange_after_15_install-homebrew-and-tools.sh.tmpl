#!/bin/bash

# {{ template "scripts-library.sh" }}

log_task "Entering Homebrew and tools installation"

readonly home_homebrew_prefix="${HOME}/.linuxbrew"
readonly root_homebrew_prefix="/home/linuxbrew/.linuxbrew"

ensure_path_entry "${home_homebrew_prefix}/bin" "${root_homebrew_prefix}/bin"

function is_root_homebrew_prefix_writable() {
  if [[ -d "${root_homebrew_prefix}" ]]; then
    return 0
  elif sudo mkdir -p "${root_homebrew_prefix}" &>/dev/null; then
    sudo rm -rf "${root_homebrew_prefix}"
    return 0
  else
    return 1
  fi
}

function is_brew_package_installed() {
  local package="$1"

  brew list "${package}" &>/dev/null
}

if is_root_homebrew_prefix_writable && [[ -d "${home_homebrew_prefix}" ]]; then
  log_task "Removing old Homebrew installation"
  rm -rf "${home_homebrew_prefix}"
fi

if ! brew --version &>/dev/null; then
  log_task "Installing Homebrew"
  if is_root_homebrew_prefix_writable; then
    brew_install_script=$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)
    CI=1 bash -c "${brew_install_script}"
  else
    homebrew_prefix="${home_homebrew_prefix}"
    log_info "Installing to '${homebrew_prefix}' due to lack of permissions on '/home/linuxbrew'"
    c git clone https://github.com/Homebrew/brew "${homebrew_prefix}/Homebrew"
    c mkdir -p "${homebrew_prefix}/bin"
    c ln -sfn "../Homebrew/bin/brew" "${homebrew_prefix}/bin"
    c brew update --force --quiet
    c chmod -R go-w "${homebrew_prefix}/share/zsh"
    unset homebrew_prefix
  fi
fi

readonly unwanted_packages=(
  jq
  volta
  deno
  docker-compose
  onedrive
  skopeo
  podman
  buildah
  asciinema
  kind
  stern
)

for package in "${unwanted_packages[@]}"; do
  if is_brew_package_installed "${package}"; then
    log_task "Removing unwanted package '${package}' installed with Homebrew"
    brew uninstall --force "${package}"
  fi
done

readonly wanted_packages=(
  chezmoi
  git
  yq
  bat
  zoxide
  eza
  ripgrep
  bottom
  fd
  dust
  just
  tokei
  navi
  fzf
  zsh
  zinit
  thefuck
  vivid
  atuin
  gh
  pass
  lolcat
)

readonly tap_packages=(
  homebrew/cask-fonts
  homebrew/bundle
  homebrew/autoupdate
)

missing_packages=()

for package in "${wanted_packages[@]}"; do
  if ! is_brew_package_installed "${package}"; then
    missing_packages+=("${package}")
  fi
done

for package in "${tap_packages[@]}"; do
  if ! brew tap | grep --quiet "${package}"; then
    log_task "Tapping Homebrew repository '${package}'"
    brew tap "${package}"
  fi
done

if [[ ${#missing_packages[@]} -gt 0 ]]; then
  log_task "Installing missing packages with Homebrew: ${missing_packages[*]}"
  brew install --force "${missing_packages[@]}"
fi

log_task "Set up zsh"
shell_path="$(which zsh)"
user=$(whoami)
if [ "$SHELL" != "$shell_path" ]; then
  log_task "Changing default shell to zsh"
	if grep -q "$shell_path" /etc/shells; then
		sudo echo "$shell_path" | sudo tee -a /etc/shells
	fi
	sudo chsh -s "$shell_path" "$user"
else
	log_info " ${user}'s shell is already changed."
fi